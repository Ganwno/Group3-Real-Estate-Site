<%
#   Created: Daniel Swain
#   Date: 27/04/2016
#
#   Partial to display the user settings
#   
#   Note:
#   	* There's some hidden fields here that are required for image cropping. They don't show and are filled/cleared by dashboard.coffee
#   	They default to hidden, with no height.
%>

<% # The page header %>
<h1 class="ui center aligned">Settings</h1>

<% # If the user has just signed up they will be redirected here and will see the following message. This message will only show the first time after sign-up %>
<% if flash[:just_signed_up] %>
	<% # A positive message block that is dismissable %>
	<div class="ui positive message">
		<% # The close icon %>
		<i class="close icon"></i>
		<% # The header text is set in the registrations_controller.rb (see the flash[:just_signed_up] declaration) %>
		<div class="header">
			<%= flash[:just_signed_up] %>
		</div>
		<% # The message content (in this case, instructions to the user about what they should do next) %>
		<p>Thanks for signing up! This page is where you can set your username and other personal details.</p>
		<p>You can also upload a profile picture and set your notification preferences.</p>
	</div>
<% end %>

<% # The user has successfully updated %>
<% if flash[:updated] %>
	<div class="ui positive message">
		<i class="close icon"></i>
		<div class="header">
			Success!
		</div>
		<p><%= flash[:updated] %></p>
	</div>
<% end %>

<% # if there are errors display them here %>
<% if flash[:errors] %>
	<% # A negative message block that is dismissably %>
	<div class="ui negative message">
		<% # The close icon %>
		<i class="close icon"></i>
		<div class="header">Please fix the following errors and try again.</div>
		<% # Display the error list %>
		<% flash.each do |name, msg| %>
			<% if msg.class == Array %>
				<div class="ui bulleted list">
					<% msg.each do |message| %>
						<%= content_tag :div, message, :id => "flash_#{name}", class: "item" %>
					<% end %>
				</div>
			<% end %>
		<% end %>
	</div>
<% end %>

<% # The remaining settings actions to go here %>
<%= form_for(current_user, as: resource_name, url: registration_path(resource_name), html: { method: :put, class: "ui form error" }) do |f| %>
	<% # Avatar preview field %>
	<div class="field" id="file-upload-preview-image">
		<label>Avatar</label>
		<div class="ui image avatar-target">
			<% # This image is replaced by the live preview %>
			<%= image_tag(current_user.avatar.url(:thumb)) %>
		</div>
	</div>
	
	<% # Avatar Crop preview field %>
	<% # This is set to display: none on page load and is brought into view (with the file-upload-preview above being hidden) only when you've selected a crop %>
	<div class="field" id="avatar-crop-preview-image" style="display: none;">
		<label>Avatar</label>
		<div>
			<% # The papercrop image crop preview that does the Jcrop magic %>
			<%= f.crop_preview :avatar, :width => 100 %>
		</div>
	</div>
	
	<% # Avatar upload field %>
	<div class="row">
		<% # The file field will be hidden and the label_tag below will replace it's functionality %>
		<%= f.file_field :avatar, class: "dashboard-settings file-input-field", id: "avatar-input" %>
		<% # This label tag must be placed after the file field above for it to work %>
		<%= label_tag "avatar-input", class: "ui medium button" do %>
			<%= content_tag(:i, "", class: "upload icon") %>
			<span>Change Avatar</span>
		<% end %>
	</div>
	
	<% # Show a link to crop the image if one exists already for the given user %>
	<% if current_user.avatar.url(:thumb) %>
		<div class="row margin-top-half">
			<% # Link to the view %>
			<%= label_tag "crop-button", class: "ui medium crop-label open-crop-modal button" do %>
				<%= content_tag(:i, "", class: "crop icon") %>
				<span>Crop Avatar</span>
			<% end %>
		</div>
	<% end %>
	

	<% # -------------------- Start of Hidden Image Cropping Data fields -------------- %>
	<section style="visibility: hidden; height: 0px;">
		<% # These six fields are hidden from view but are used to calculate the cropping for the user avatar if they are uploding a new one %>
		<% # Please don't delete these fields from the form. %>
		<div class="six fields margin-top" id="image-size-values" >
			<div class="field">
				<label>Real Width</label>
				<input type="number" id="img-real-width">
			</div>
			
			<div class="field">
				<label>Real Height</label>
				<input type="number" id="img-real-height">
			</div>

			<div class="field">
				<label>Crop Window Width</label>
				<input type="number" id="img-crop-window-width">
			</div>

			<div class="field">
				<label>Crop Window Height</label>
				<input type="number" id="img-crop-window-height">
			</div>
			
			<div class="field">
				<label>Real Image Aspect</label>
				<input type="number" id="img-real-aspect">
			</div>

			<div class="field">
				<label>Crop Window Aspect</label>
				<input type="number" id="img-crop-window-aspect">
			</div>
		</div>

		<% # These four fields hold the crop values that are sent to the server and are required to crop the user image. %>	
		<% # Please don't delete them from the form. They are hidden from view. %>
		<div class="four fields" id="avatar-crop-values">
			<div class="field">
				<label>user[avatar_crop_x]</label>
				<input name="user[avatar_crop_x]" id="avatar_crop_x" type="number" disabled="true">
			</div>
			<div class="field">
				<label>user[avatar_crop_y]</label>
				<input name="user[avatar_crop_y]" id="avatar_crop_y" type="number" disabled="true">
			</div>
			<div class="field">
				<label>user[avatar_crop_w]</label>
				<input name="user[avatar_crop_w]" id="avatar_crop_w" type="number" disabled="true">
			</div>
			<div class="field">
				<label>user[avatar_crop_h]</label>
				<input name="user[avatar_crop_h]" id="avatar_crop_h" type="number" disabled="true">
			</div>
		</div>
	</section>
	<% # -------------------- End of Hidden Cropping fields -------------- %>


	<% # Normal form fields below here %>
	<section class="input-valadation">
		<% # Username field %>
		<div class="field">
			<label>Username</label>
			<%= f.text_field :username, placeholder: "Account Name" %>
		</div>

		<div class="two fields margin-top-half">
			<% # First name field %>
			<div class="field">
				<label>First Name</label>
				<%= f.text_field :first_name, autofocus: true, placeholder: "First Name" %>
			</div>

			<% # Last name field %>
			<div class="field">
				<label>Last Name</label>
				<%= f.text_field :last_name, placeholder: "Last Name" %>
			</div>
		</div>

		<% # Email field %>
		<div class="required field">
			<label>Email</label>
			<%= f.email_field :email, placeholder: "email@address.com" %>
		</div>

		<div class="ui error message"></div>

		<% # Devise checker %>
		<% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
			<div>Currently waiting confirmation for: <%= resource.unconfirmed_email %></div>
		<% end %>

		<% # New Password Field %>
		<div class="field">
			<label>New Password <i>(leave blank if you don't want to change it)</i></label>
			<%= f.password_field :password, autocomplete: "off", placeholder: "Enter your new password", class: "password-popup" %>
		</div>

		<% # Confirm new password field %>
		<div class="field">
			<label>Confirm New Password</label>
			<%= f.password_field :password_confirmation, autocomplete: "off", placeholder: "Confirm your new password" %>
		</div>

		<% # Old Password field %>
		<div class="required field">
			<label>Current Password <i>(we need your current password to confirm your changes)</i></label>
			<%= f.password_field :current_password, autocomplete: "off", placeholder: "Enter your current password", id:"message"%>
		</div>

		<% # Update/Submit action %>
		<div class="actions">
			<%= f.submit "Update", class: "ui dashboard-settings button", id: "sendButton" %>
		</div>
	</section>
<% end %>

<% # Delete account option %>
<div class="ui row margin-top">
	<div class="ui divider margin-top"></div>
	<%= button_to "Delete my account", registration_path(resource_name), data: { confirm: "Are you sure, this cannot be undone?" }, method: :delete, class: "ui sell-red-button button" %>
</div>

<% # Render the _crop_modal only if a user has an existing image to crop. %>
<% if current_user.avatar_file_name != nil %>
	<%= render "dashboard/crop_modal" %>
<% end %>
